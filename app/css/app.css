@charset "UTF-8";
@font-face {
  font-family: 'FontAwesome';
  src: url("../fonts/font-awesome/fontawesome-webfont.eot?v=4.5.0");
  src: url("../fonts/font-awesome/fontawesome-webfont.eot?#iefix&v=4.5.0") format("embedded-opentype"), url("../fonts/font-awesome/fontawesome-webfont.woff2?v=4.5.0") format("woff2"), url("../fonts/font-awesome/fontawesome-webfont.woff?v=4.5.0") format("woff"), url("../fonts/font-awesome/fontawesome-webfont.ttf?v=4.5.0") format("truetype"), url("../fonts/font-awesome/fontawesome-webfont.svg?v=4.5.0#fontawesomeregular") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Brandon_bld';
  src: url("../fonts/brandon-grotesque/Brandon_bld.eot");
  src: local("☺"), url("../fonts/brandon-grotesque/Brandon_bld.woff") format("woff"), url("../fonts/brandon-grotesque/Brandon_bld.ttf") format("truetype"), url("../fonts/brandon-grotesque/Brandon_bld.svg") format("svg");
  font-weight: bold;
  font-style: normal; }

@font-face {
  font-family: 'Brandon_bld_it';
  src: url("../fonts/brandon-grotesque/Brandon_bld_it.eot");
  src: local("☺"), url("../fonts/brandon-grotesque/Brandon_bld_it.woff") format("woff"), url("../fonts/brandon-grotesque/Brandon_bld_it.ttf") format("truetype"), url("../fonts/brandon-grotesque/Brandon_bld_it.svg") format("svg");
  font-weight: bold;
  font-style: italic; }

@font-face {
  font-family: 'Brandon_blk';
  src: url("../fonts/brandon-grotesque/Brandon_blk.eot");
  src: local("☺"), url("../fonts/brandon-grotesque/Brandon_blk.woff") format("woff"), url("../fonts/brandon-grotesque/Brandon_blk.ttf") format("truetype"), url("../fonts/brandon-grotesque/Brandon_blk.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Brandon_blk_it';
  src: url("../fonts/brandon-grotesque/Brandon_blk_it.eot");
  src: local("☺"), url("../fonts/brandon-grotesque/Brandon_blk_it.woff") format("woff"), url("../fonts/brandon-grotesque/Brandon_blk_it.ttf") format("truetype"), url("../fonts/brandon-grotesque/Brandon_blk_it.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Brandon_light';
  src: url("../fonts/brandon-grotesque/Brandon_light.eot");
  src: local("☺"), url("../fonts/brandon-grotesque/Brandon_light.woff") format("woff"), url("../fonts/brandon-grotesque/Brandon_light.ttf") format("truetype"), url("../fonts/brandon-grotesque/Brandon_light.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Brandon_light_it';
  src: url("../fonts/brandon-grotesque/Brandon_light_it.eot");
  src: local("☺"), url("../fonts/brandon-grotesque/Brandon_light_it.woff") format("woff"), url("../fonts/brandon-grotesque/Brandon_light_it.ttf") format("truetype"), url("../fonts/brandon-grotesque/Brandon_light_it.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Brandon_med';
  src: url("../fonts/brandon-grotesque/Brandon_med.eot");
  src: local("☺"), url("../fonts/brandon-grotesque/Brandon_med.woff") format("woff"), url("../fonts/brandon-grotesque/Brandon_med.ttf") format("truetype"), url("../fonts/brandon-grotesque/Brandon_med.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Brandon_reg';
  src: url("../fonts/brandon-grotesque/Brandon_reg.eot");
  src: local("☺"), url("../fonts/brandon-grotesque/Brandon_reg.woff") format("woff"), url("../fonts/brandon-grotesque/Brandon_reg.ttf") format("truetype"), url("../fonts/brandon-grotesque/Brandon_reg.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Brandon_reg_it';
  src: url("../fonts/brandon-grotesque/Brandon_reg_it.eot");
  src: local("☺"), url("../fonts/brandon-grotesque/Brandon_reg_it.woff") format("woff"), url("../fonts/brandon-grotesque/Brandon_reg_it.ttf") format("truetype"), url("../fonts/brandon-grotesque/Brandon_reg_it.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Brandon_thin';
  src: url("../fonts/brandon-grotesque/Brandon_thin.eot");
  src: local("☺"), url("../fonts/brandon-grotesque/Brandon_thin.woff") format("woff"), url("../fonts/brandon-grotesque/Brandon_thin.ttf") format("truetype"), url("../fonts/brandon-grotesque/Brandon_thin.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Brandon_thin_it';
  src: url("../fonts/brandon-grotesque/Brandon_thin_it.eot");
  src: local("☺"), url("../fonts/brandon-grotesque/Brandon_thin_it.woff") format("woff"), url("../fonts/brandon-grotesque/Brandon_thin_it.ttf") format("truetype"), url("../fonts/brandon-grotesque/Brandon_thin_it.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Open Sans 300';
  src: url("../fonts/open-sans/OpenSans-Light.eot");
  src: url("../fonts/open-sans/OpenSans-Light.eot") format("embedded-opentype"), url("../fonts/open-sans/OpenSans-Light.woff2") format("woff2"), url("../fonts/open-sans/OpenSans-Light.woff") format("woff"), url("../fonts/open-sans/OpenSans-Light.ttf") format("truetype"), url("../fonts/open-sans/OpenSans-Light.svg") format("svg");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'Open Sans 300 Italic';
  src: url("../fonts/open-sans/OpenSans-LightItalic.eot");
  src: url("../fonts/open-sans/OpenSans-LightItalic.eot") format("embedded-opentype"), url("../fonts/open-sans/OpenSans-LightItalic.woff2") format("woff2"), url("../fonts/open-sans/OpenSans-LightItalic.woff") format("woff"), url("../fonts/open-sans/OpenSans-LightItalic.ttf") format("truetype"), url("../fonts/open-sans/OpenSans-LightItalic.svg") format("svg");
  font-weight: 300;
  font-style: italic; }

@font-face {
  font-family: 'Open Sans Normal';
  src: url("../fonts/open-sans/OpenSans-Regular.eot");
  src: url("../fonts/open-sans/OpenSans-Regular.eot") format("embedded-opentype"), url("../fonts/open-sans/OpenSans-Regular.woff2") format("woff2"), url("../fonts/open-sans/OpenSans-Regular.woff") format("woff"), url("../fonts/open-sans/OpenSans-Regular.ttf") format("truetype"), url("../fonts/open-sans/OpenSans-Regular.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Open Sans Normal Italic';
  src: url("../fonts/open-sans/OpenSans-Italic.eot");
  src: url("../fonts/open-sans/OpenSans-Italic.eot") format("embedded-opentype"), url("../fonts/open-sans/OpenSans-Italic.woff2") format("woff2"), url("../fonts/open-sans/OpenSans-Italic.woff") format("woff"), url("../fonts/open-sans/OpenSans-Italic.ttf") format("truetype"), url("../fonts/open-sans/OpenSans-Italic.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Open Sans 600';
  src: url("../fonts/open-sans/OpenSans-Semibold.eot");
  src: url("../fonts/open-sans/OpenSans-Semibold.eot") format("embedded-opentype"), url("../fonts/open-sans/OpenSans-Semibold.woff2") format("woff2"), url("../fonts/open-sans/OpenSans-Semibold.woff") format("woff"), url("../fonts/open-sans/OpenSans-Semibold.ttf") format("truetype"), url("../fonts/open-sans/OpenSans-Semibold.svg") format("svg");
  font-weight: 600;
  font-style: normal; }

@font-face {
  font-family: 'Open Sans 600 Italic';
  src: url("../fonts/open-sans/OpenSans-SemiboldItalic.eot");
  src: url("../fonts/open-sans/OpenSans-SemiboldItalic.eot") format("embedded-opentype"), url("../fonts/open-sans/OpenSans-SemiboldItalic.woff2") format("woff2"), url("../fonts/open-sans/OpenSans-SemiboldItalic.woff") format("woff"), url("../fonts/open-sans/OpenSans-SemiboldItalic.ttf") format("truetype"), url("../fonts/open-sans/OpenSans-SemiboldItalic.svg") format("svg");
  font-weight: 600;
  font-style: italic; }

@font-face {
  font-family: 'Open Sans Bold';
  src: url("../fonts/open-sans/OpenSans-Bold.eot");
  src: url("../fonts/open-sans/OpenSans-Bold.eot") format("embedded-opentype"), url("../fonts/open-sans/OpenSans-Bold.woff2") format("woff2"), url("../fonts/open-sans/OpenSans-Bold.woff") format("woff"), url("../fonts/open-sans/OpenSans-Bold.ttf") format("truetype"), url("../fonts/open-sans/OpenSans-Bold.svg") format("svg");
  font-weight: bold;
  font-style: normal; }

@font-face {
  font-family: 'Open Sans Bold Italic';
  src: url("../fonts/open-sans/OpenSans-BoldItalic.eot");
  src: url("../fonts/open-sans/OpenSans-BoldItalic.eot") format("embedded-opentype"), url("../fonts/open-sans/OpenSans-BoldItalic.woff2") format("woff2"), url("../fonts/open-sans/OpenSans-BoldItalic.woff") format("woff"), url("../fonts/open-sans/OpenSans-BoldItalic.ttf") format("truetype"), url("../fonts/open-sans/OpenSans-BoldItalic.svg") format("svg");
  font-weight: bold;
  font-style: italic; }

@font-face {
  font-family: 'Open Sans 800';
  src: url("../fonts/open-sans/OpenSans-ExtraBold.eot");
  src: url("../fonts/open-sans/OpenSans-ExtraBold.eot") format("embedded-opentype"), url("../fonts/open-sans/OpenSans-ExtraBold.woff2") format("woff2"), url("../fonts/open-sans/OpenSans-ExtraBold.woff") format("woff"), url("../fonts/open-sans/OpenSans-ExtraBold.ttf") format("truetype"), url("../fonts/open-sans/OpenSans-ExtraBold.svg") format("svg");
  font-weight: 800;
  font-style: normal; }

@font-face {
  font-family: 'Open Sans 800 Italic';
  src: url("../fonts/open-sans/OpenSans-ExtraBoldItalic.eot");
  src: url("../fonts/open-sans/OpenSans-ExtraBoldItalic.eot") format("embedded-opentype"), url("../fonts/open-sans/OpenSans-ExtraBoldItalic.woff2") format("woff2"), url("../fonts/open-sans/OpenSans-ExtraBoldItalic.woff") format("woff"), url("../fonts/open-sans/OpenSans-ExtraBoldItalic.ttf") format("truetype"), url("../fonts/open-sans/OpenSans-ExtraBoldItalic.svg") format("svg");
  font-weight: 800;
  font-style: italic; }

@font-face {
  font-family: 'Abril_Text_SemiBold';
  src: url("../fonts/abril/Abril_Text_SemiBold.eot");
  src: local("☺"), url("../fonts/abril/Abril_Text_SemiBold.woff") format("woff"), url("../fonts/abril/Abril_Text_SemiBold.ttf") format("truetype"), url("../fonts/abril/Abril_Text_SemiBold.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Abril_Text_Regular';
  src: url("../fonts/abril/Abril_Text_Regular.eot");
  src: local("☺"), url("../fonts/abril/Abril_Text_Regular.woff") format("woff"), url("../fonts/abril/Abril_Text_Regular.ttf") format("truetype"), url("../fonts/abril/Abril_Text_Regular.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Abril_Text_Italic';
  src: url("../fonts/abril/Abril_Text_Italic.eot");
  src: local("☺"), url("../fonts/abril/Abril_Text_Italic.woff") format("woff"), url("../fonts/abril/Abril_Text_Italic.ttf") format("truetype"), url("../fonts/abril/Abril_Text_Italic.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Abril_Text_ExtraBoldItalic';
  src: url("../fonts/abril/Abril_Text_ExtraBoldItalic.eot");
  src: local("☺"), url("../fonts/abril/Abril_Text_ExtraBoldItalic.woff") format("woff"), url("../fonts/abril/Abril_Text_ExtraBoldItalic.ttf") format("truetype"), url("../fonts/abril/Abril_Text_ExtraBoldItalic.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Abril_Text_ExtraBold';
  src: url("../fonts/abril/Abril_Text_ExtraBold.eot");
  src: local("☺"), url("../fonts/abril/Abril_Text_ExtraBold.woff") format("woff"), url("../fonts/abril/Abril_Text_ExtraBold.ttf") format("truetype"), url("../fonts/abril/Abril_Text_ExtraBold.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Abril_Text_BoldItalic';
  src: url("../fonts/abril/Abril_Text_BoldItalic.eot");
  src: local("☺"), url("../fonts/abril/Abril_Text_BoldItalic.woff") format("woff"), url("../fonts/abril/Abril_Text_BoldItalic.ttf") format("truetype"), url("../fonts/abril/Abril_Text_BoldItalic.svg") format("svg");
  font-weight: bold;
  font-style: italic; }

@font-face {
  font-family: 'Abril_Text_Bold';
  src: url("../fonts/abril/Abril_Text_Bold.eot");
  src: local("☺"), url("../fonts/abril/Abril_Text_Bold.woff") format("woff"), url("../fonts/abril/Abril_Text_Bold.ttf") format("truetype"), url("../fonts/abril/Abril_Text_Bold.svg") format("svg");
  font-weight: bold;
  font-style: normal; }

@font-face {
  font-family: 'Abril_Fatface_Italic';
  src: url("../fonts/abril/Abril_Fatface_Italic.eot");
  src: local("☺"), url("../fonts/abril/Abril_Fatface_Italic.woff") format("woff"), url("../fonts/abril/Abril_Fatface_Italic.ttf") format("truetype"), url("../fonts/abril/Abril_Fatface_Italic.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Abril_Fatface';
  src: url("../fonts/abril/Abril_Fatface.eot");
  src: local("☺"), url("../fonts/abril/Abril_Fatface.woff") format("woff"), url("../fonts/abril/Abril_Fatface.ttf") format("truetype"), url("../fonts/abril/Abril_Fatface.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Abril_Display_SemiBoldItalic';
  src: url("../fonts/abril/Abril_Display_SemiBoldItalic.eot");
  src: local("☺"), url("../fonts/abril/Abril_Display_SemiBoldItalic.woff") format("woff"), url("../fonts/abril/Abril_Display_SemiBoldItalic.ttf") format("truetype"), url("../fonts/abril/Abril_Display_SemiBoldItalic.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Abril_Display_SemiBold';
  src: url("../fonts/abril/Abril_Display_SemiBold.eot");
  src: local("☺"), url("../fonts/abril/Abril_Display_SemiBold.woff") format("woff"), url("../fonts/abril/Abril_Display_SemiBold.ttf") format("truetype"), url("../fonts/abril/Abril_Display_SemiBold.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Abril_Display_Regular';
  src: url("../fonts/abril/Abril_Display_Regular.eot");
  src: local("☺"), url("../fonts/abril/Abril_Display_Regular.woff") format("woff"), url("../fonts/abril/Abril_Display_Regular.ttf") format("truetype"), url("../fonts/abril/Abril_Display_Regular.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Abril_Display_Italic';
  src: url("../fonts/abril/Abril_Display_Italic.eot");
  src: local("☺"), url("../fonts/abril/Abril_Display_Italic.woff") format("woff"), url("../fonts/abril/Abril_Display_Italic.ttf") format("truetype"), url("../fonts/abril/Abril_Display_Italic.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Abril_Display_ExtraBoldItalic';
  src: url("../fonts/abril/Abril_Display_ExtraBoldItalic.eot");
  src: local("☺"), url("../fonts/abril/Abril_Display_ExtraBoldItalic.woff") format("woff"), url("../fonts/abril/Abril_Display_ExtraBoldItalic.ttf") format("truetype"), url("../fonts/abril/Abril_Display_ExtraBoldItalic.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Abril_Display_ExtraBold';
  src: url("../fonts/abril/Abril_Display_ExtraBold.eot");
  src: local("☺"), url("../fonts/abril/Abril_Display_ExtraBold.woff") format("woff"), url("../fonts/abril/Abril_Display_ExtraBold.ttf") format("truetype"), url("../fonts/abril/Abril_Display_ExtraBold.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Abril_Display_BoldItalic';
  src: url("../fonts/abril/Abril_Display_BoldItalic.eot");
  src: local("☺"), url("../fonts/abril/Abril_Display_BoldItalic.woff") format("woff"), url("../fonts/abril/Abril_Display_BoldItalic.ttf") format("truetype"), url("../fonts/abril/Abril_Display_BoldItalic.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Abril_Display_Bold';
  src: url("../fonts/abril/Abril_Display_Bold.eot");
  src: local("☺"), url("../fonts/abril/Abril_Display_Bold.woff") format("woff"), url("../fonts/abril/Abril_Display_Bold.ttf") format("truetype"), url("../fonts/abril/Abril_Display_Bold.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Abril_Display_Black';
  src: url("../fonts/abril/Abril_Display_Black.eot");
  src: local("☺"), url("../fonts/abril/Abril_Display_Black.woff") format("woff"), url("../fonts/abril/Abril_Display_Black.ttf") format("truetype"), url("../fonts/abril/Abril_Display_Black.svg") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Abril_Text_SemiBoldItalic';
  src: url("../fonts/abril/Abril_Text_SemiBoldItalic.eot");
  src: local("☺"), url("../fonts/abril/Abril_Text_SemiBoldItalic.woff") format("woff"), url("../fonts/abril/Abril_Text_SemiBoldItalic.ttf") format("truetype"), url("../fonts/abril/Abril_Text_SemiBoldItalic.svg") format("svg");
  font-weight: normal;
  font-style: italic; }

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
html {
  color: #222;
  font-size: 1em;
  line-height: 1.4; }

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */
.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/* ==========================================================================
   Author's custom styles
   ========================================================================== */
/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Hide visually and from screen readers
 */
.hidden {
  display: none !important; }

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

/*
 * Hide visually and from screen readers, but maintain layout
 */
.invisible {
  visibility: hidden; }

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.clearfix:before,
.clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.clearfix:after {
  clear: both; }

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */
/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */
@media print {
  *,
  *:before,
  *:after,
  *:first-letter,
  *:first-line {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

*, *::after, *::before {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

html {
  font-size: 62.5%; }

body {
  font-size: 1.8rem;
  font-family: "Brandon_reg", sans-serif;
  color: #33414a;
  background-color: #f2f2f2; }

a {
  color: #7e4d7e;
  text-decoration: none; }

header {
  position: fixed;
  z-index: 3;
  height: 50px;
  width: 100%;
  top: 0;
  left: 0;
  background-color: #33414a;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Force Hardware Acceleration */
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  -ms-transform: translateZ(0);
  -o-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transition: -webkit-transform 0.3s;
  -moz-transition: -moz-transform 0.3s;
  transition: transform 0.3s; }

header.nav-is-visible {
  -webkit-transform: translateX(-260px);
  -moz-transform: translateX(-260px);
  -ms-transform: translateX(-260px);
  -o-transform: translateX(-260px);
  transform: translateX(-260px); }

header::before {
  /* never visible - this is used in jQuery to check the current MQ */
  display: none;
  content: 'mobile'; }

@media only screen and (min-width: 1024px) {
  header {
    height: 80px; }
  header.nav-is-visible {
    -webkit-transform: translateX(0);
    -moz-transform: translateX(0);
    -ms-transform: translateX(0);
    -o-transform: translateX(0);
    transform: translateX(0); }
  header::before {
    content: 'desktop'; } }

.sr-logo {
  display: inline-block;
  height: 100%;
  margin-left: 15px;
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  -ms-transform: translateZ(0);
  -o-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.sr-logo img {
  display: block;
  max-width: 50%;
  padding-top: 10px; }

@media only screen and (min-width: 1024px) {
  .sr-logo {
    position: absolute;
    z-index: 2;
    margin-left: 5%; }
  .sr-logo img {
    margin-top: 10px;
    max-width: 75%; } }

.sr-nav-trigger {
  display: block;
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  width: 50px;
  overflow: hidden;
  white-space: nowrap;
  color: transparent; }

.sr-nav-trigger span {
  /* hamburger icon created in CSS */
  position: absolute;
  height: 2px;
  width: 20px;
  top: 50%;
  margin-top: -1px;
  left: 50%;
  margin-left: -10px;
  -webkit-transition: background-color 0.3s 0.3s;
  -moz-transition: background-color 0.3s 0.3s;
  transition: background-color 0.3s 0.3s;
  background-color: #ffffff; }

.sr-nav-trigger span::before, .sr-nav-trigger span::after {
  /* upper and lower lines of the menu icon */
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: #ffffff;
  /* Force Hardware Acceleration */
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  -ms-transform: translateZ(0);
  -o-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transition: -webkit-transform 0.3s 0.3s;
  -moz-transition: -moz-transform 0.3s 0.3s;
  transition: transform 0.3s 0.3s; }

.sr-nav-trigger span::before {
  -webkit-transform: translateY(-6px);
  -moz-transform: translateY(-6px);
  -ms-transform: translateY(-6px);
  -o-transform: translateY(-6px);
  transform: translateY(-6px); }

.sr-nav-trigger span::after {
  -webkit-transform: translateY(6px);
  -moz-transform: translateY(6px);
  -ms-transform: translateY(6px);
  -o-transform: translateY(6px);
  transform: translateY(6px); }

.nav-is-visible .sr-nav-trigger span {
  background-color: rgba(255, 255, 255, 0); }

.nav-is-visible .sr-nav-trigger span::before {
  -webkit-transform: translateY(0) rotate(-45deg);
  -moz-transform: translateY(0) rotate(-45deg);
  -ms-transform: translateY(0) rotate(-45deg);
  -o-transform: translateY(0) rotate(-45deg);
  transform: translateY(0) rotate(-45deg); }

.nav-is-visible .sr-nav-trigger span::after {
  -webkit-transform: translateY(0) rotate(45deg);
  -moz-transform: translateY(0) rotate(45deg);
  -ms-transform: translateY(0) rotate(45deg);
  -o-transform: translateY(0) rotate(45deg);
  transform: translateY(0) rotate(45deg); }

@media only screen and (min-width: 1024px) {
  .sr-nav-trigger {
    display: none; } }

.sr-main-nav {
  position: fixed;
  z-index: 1;
  top: 0;
  right: 0;
  width: 260px;
  height: 100vh;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  visibility: hidden;
  background: #1e262c;
  -webkit-transition: visibility 0s 0.3s;
  -moz-transition: visibility 0s 0.3s;
  transition: visibility 0s 0.3s; }

.sr-main-nav a {
  display: block;
  font-size: 1.8rem;
  padding: .9em 2em .9em 1em;
  border-bottom: 1px solid #33414a;
  color: #ffffff;
  -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;
  -moz-transition: -moz-transform 0.3s, opacity 0.3s;
  transition: transform 0.3s, opacity 0.3s; }

.sr-main-nav li ul {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  -webkit-transition: -webkit-transform 0.3s;
  -moz-transition: -moz-transform 0.3s;
  transition: transform 0.3s;
  -webkit-transform: translateX(260px);
  -moz-transform: translateX(260px);
  -ms-transform: translateX(260px);
  -o-transform: translateX(260px);
  transform: translateX(260px); }

.sr-main-nav.nav-is-visible {
  visibility: visible;
  -webkit-transition: visibility 0s 0s;
  -moz-transition: visibility 0s 0s;
  transition: visibility 0s 0s; }

.sr-main-nav.moves-out > li > a {
  /* push the navigation items to the left - and lower down opacity - when secondary nav slides in */
  -webkit-transform: translateX(-100%);
  -moz-transform: translateX(-100%);
  -ms-transform: translateX(-100%);
  -o-transform: translateX(-100%);
  transform: translateX(-100%);
  opacity: 0; }

.sr-main-nav.moves-out > li > ul {
  -webkit-transform: translateX(0);
  -moz-transform: translateX(0);
  -ms-transform: translateX(0);
  -o-transform: translateX(0);
  transform: translateX(0); }

.sr-main-nav .sr-subnav-trigger, .sr-main-nav .go-back a {
  position: relative; }

.sr-main-nav .sr-subnav-trigger::before, .sr-main-nav .sr-subnav-trigger::after, .sr-main-nav .go-back a::before, .sr-main-nav .go-back a::after {
  /* arrow icon in CSS */
  content: '';
  position: absolute;
  top: 50%;
  margin-top: -1px;
  display: inline-block;
  height: 2px;
  width: 10px;
  background: #485c68;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.sr-main-nav .sr-subnav-trigger::before, .sr-main-nav .go-back a::before {
  -webkit-transform: rotate(45deg);
  -moz-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  -o-transform: rotate(45deg);
  transform: rotate(45deg); }

.sr-main-nav .sr-subnav-trigger::after, .sr-main-nav .go-back a::after {
  -webkit-transform: rotate(-45deg);
  -moz-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  -o-transform: rotate(-45deg);
  transform: rotate(-45deg); }

.sr-main-nav .sr-subnav-trigger::before, .sr-main-nav .sr-subnav-trigger::after {
  /* arrow goes on the right side - children navigation */
  right: 20px;
  -webkit-transform-origin: 9px 50%;
  -moz-transform-origin: 9px 50%;
  -ms-transform-origin: 9px 50%;
  -o-transform-origin: 9px 50%;
  transform-origin: 9px 50%; }

.sr-main-nav .go-back a {
  padding-left: 2em; }

.sr-main-nav .go-back a::before, .sr-main-nav .go-back a::after {
  /* arrow goes on the left side - go back button */
  left: 20px;
  -webkit-transform-origin: 1px 50%;
  -moz-transform-origin: 1px 50%;
  -ms-transform-origin: 1px 50%;
  -o-transform-origin: 1px 50%;
  transform-origin: 1px 50%; }

.sr-main-nav .placeholder {
  /* never visible or clickable- it is used to take up the same space as the .sr-subnav-trigger */
  display: none; }

@media only screen and (min-width: 1024px) {
  .sr-main-nav {
    position: static;
    visibility: visible;
    width: 100%;
    height: 80px;
    line-height: 80px;
    /* padding left = logo size + logo left position*/
    padding: 0 5% 0 calc(5% + 124px);
    background: transparent;
    text-align: right; }
  .sr-main-nav li {
    display: inline-block;
    height: 100%;
    padding: 0 .4em; }
  .sr-main-nav li a {
    display: inline-block;
    padding: .8em;
    line-height: 1;
    font-size: 1.6rem;
    border-bottom: none;
    /* Prevent .sr-subnav-trigger flicker is Safari */
    -webkit-transform: translateZ(0);
    -moz-transform: translateZ(0);
    -ms-transform: translateZ(0);
    -o-transform: translateZ(0);
    transform: translateZ(0);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-transition: opacity 0.2s;
    -moz-transition: opacity 0.2s;
    transition: opacity 0.2s; }
  .sr-main-nav li a:not(.sr-subnav-trigger):hover {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    opacity: .6; }
  .sr-main-nav .go-back {
    display: none; }
  .sr-main-nav .sr-subnav-trigger {
    z-index: 1;
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 5em;
    -webkit-transition: border 0.3s;
    -moz-transition: border 0.3s;
    transition: border 0.3s; }
  .sr-main-nav .sr-subnav-trigger:hover {
    border-color: rgba(255, 255, 255, 0.4); }
  .sr-main-nav .sr-subnav-trigger::before, .sr-main-nav .sr-subnav-trigger::after {
    top: 22px;
    right: 17px;
    background-color: #ffffff;
    /* change transform-origin to rotate the arrow */
    -webkit-transform-origin: 50% 50%;
    -moz-transform-origin: 50% 50%;
    -ms-transform-origin: 50% 50%;
    -o-transform-origin: 50% 50%;
    transform-origin: 50% 50%;
    -webkit-transition: -webkit-transform 0.3s, width 0.3s, right 0.3s;
    -moz-transition: -moz-transform 0.3s, width 0.3s, right 0.3s;
    transition: transform 0.3s, width 0.3s, right 0.3s; }
  .sr-main-nav .sr-subnav-trigger::before {
    right: 23px; }
  .sr-main-nav .sr-subnav-trigger, .sr-main-nav .placeholder {
    padding-right: 2.4em;
    padding-left: 1.1em; }
  .sr-main-nav li ul {
    height: 80px;
    background-color: #646d70;
    /* padding left = logo size + logo left position*/
    padding: 0 5% 0 calc(5% + 124px);
    -webkit-transform: translateY(-80px);
    -moz-transform: translateY(-80px);
    -ms-transform: translateY(-80px);
    -o-transform: translateY(-80px);
    transform: translateY(-80px);
    -webkit-transition: -webkit-transform 0.3s 0.2s;
    -moz-transition: -moz-transform 0.3s 0.2s;
    transition: transform 0.3s 0.2s; }
  .sr-main-nav li ul li {
    opacity: 0;
    -webkit-transform: translateY(-20px);
    -moz-transform: translateY(-20px);
    -ms-transform: translateY(-20px);
    -o-transform: translateY(-20px);
    transform: translateY(-20px);
    -webkit-transition: -webkit-transform 0.3s 0s, opacity 0.3s 0s;
    -moz-transition: -moz-transform 0.3s 0s, opacity 0.3s 0s;
    transition: transform 0.3s 0s, opacity 0.3s 0s; }
  .sr-main-nav .placeholder {
    /* never visible or clickable- it is used to take up the same space as the .sr-subnav-trigger */
    display: block;
    visibility: hidden;
    opacity: 0;
    pointer-event: none; }
  .sr-main-nav.moves-out > li > a {
    -webkit-transform: translateX(0);
    -moz-transform: translateX(0);
    -ms-transform: translateX(0);
    -o-transform: translateX(0);
    transform: translateX(0);
    opacity: 1; }
  .sr-main-nav.moves-out > li > ul {
    -webkit-transition: -webkit-transform 0.3s;
    -moz-transition: -moz-transform 0.3s;
    transition: transform 0.3s;
    -webkit-transform: translateY(0);
    -moz-transform: translateY(0);
    -ms-transform: translateY(0);
    -o-transform: translateY(0);
    transform: translateY(0); }
  .sr-main-nav.moves-out > li ul li {
    opacity: 1;
    -webkit-transform: translateY(0);
    -moz-transform: translateY(0);
    -ms-transform: translateY(0);
    -o-transform: translateY(0);
    transform: translateY(0);
    -webkit-transition: -webkit-transform 0.3s 0.2s, opacity 0.3s 0.2s;
    -moz-transition: -moz-transform 0.3s 0.2s, opacity 0.3s 0.2s;
    transition: transform 0.3s 0.2s, opacity 0.3s 0.2s; }
  .sr-main-nav.moves-out .sr-subnav-trigger::before, .sr-main-nav.moves-out .sr-subnav-trigger::after {
    width: 14px;
    right: 17px; }
  .sr-main-nav.moves-out .sr-subnav-trigger::before {
    -webkit-transform: rotate(225deg);
    -moz-transform: rotate(225deg);
    -ms-transform: rotate(225deg);
    -o-transform: rotate(225deg);
    transform: rotate(225deg); }
  .sr-main-nav.moves-out .sr-subnav-trigger::after {
    -webkit-transform: rotate(135deg);
    -moz-transform: rotate(135deg);
    -ms-transform: rotate(135deg);
    -o-transform: rotate(135deg);
    transform: rotate(135deg); } }

.sr-main-content::before {
  /* never visible - this is used in jQuery to check the current MQ */
  display: none;
  content: 'mobile'; }

@media only screen and (min-width: 1024px) {
  .sr-main-content::before {
    content: 'desktop'; } }

.sr-main-content {
  position: relative;
  z-index: 2;
  min-height: 100vh;
  background-color: #f2f2f2;
  -webkit-transition: -webkit-transform 0.3s;
  -moz-transition: -moz-transform 0.3s;
  transition: transform 0.3s; }

.sr-main-content.nav-is-visible {
  -webkit-transform: translateX(-260px);
  -moz-transform: translateX(-260px);
  -ms-transform: translateX(-260px);
  -o-transform: translateX(-260px);
  transform: translateX(-260px); }

@media only screen and (min-width: 1024px) {
  .sr-main-content.nav-is-visible {
    -webkit-transform: translateX(0);
    -moz-transform: translateX(0);
    -ms-transform: translateX(0);
    -o-transform: translateX(0);
    transform: translateX(0); } }

.no-js .sr-nav-trigger, .no-js .sr-subnav-trigger {
  display: none; }

.no-js header {
  position: relative;
  height: auto; }

.no-js .sr-logo img {
  margin-bottom: 14px; }

.no-js .sr-main-nav {
  position: static;
  width: 100%;
  height: auto;
  visibility: visible;
  overflow: visible; }

.no-js .sr-main-nav li {
  display: inline-block; }

.no-js .sr-main-nav li:last-child {
  display: block; }

.no-js .sr-main-nav .go-back {
  display: none; }

.no-js .sr-main-nav li ul {
  position: static;
  width: 100%;
  -webkit-transform: translateX(0);
  -moz-transform: translateX(0);
  -ms-transform: translateX(0);
  -o-transform: translateX(0);
  transform: translateX(0); }

@media only screen and (min-width: 1024px) {
  .no-js .sr-main-nav {
    height: 80px; }
  .no-js .sr-main-nav li ul {
    position: absolute;
    top: 80px; }
  .no-js .sr-main-nav li ul li {
    -webkit-transform: translateY(0);
    -moz-transform: translateY(0);
    -ms-transform: translateY(0);
    -o-transform: translateY(0);
    transform: translateY(0);
    opacity: 1; }
  .no-js .sr-main-nav li ul li:last-child {
    display: none; } }

.no-js .sr-main-content {
  padding-top: 0; }

@media only screen and (min-width: 1024px) {
  .no-js .sr-main-content {
    padding-top: 80px; } }

.home-banner {
  height: 100vh;
  color: #718087;
  text-align: center;
  padding-top: 100px; }

/*# sourceMappingURL=data:application/json;base64, */
